name: eda-semi-async-http-handler
services:
  server:
    build:
      context: .
      dockerfile: ./Dockerfile
    working_dir: /srv
    volumes:
      - ./.eda-semi-async-http-handler-docker.yaml:/srv/.eda-semi-async-http-handler-docker.yaml
    tty: true
    command: server --config=/srv/.eda-semi-async-http-handler-docker.yaml
    ports:
      - "8080:8080"
    deploy:
      restart_policy:
        condition: unless-stopped

  consumer:
    build:
      context: .
      dockerfile: ./Dockerfile
    working_dir: /srv
    volumes:
      - ./.eda-semi-async-http-handler-docker.yaml:/srv/.eda-semi-async-http-handler-docker.yaml
    tty: true
    command: consumer --config=/srv/.eda-semi-async-http-handler-docker.yaml
    deploy:
      restart_policy:
        condition: unless-stopped

  mariadb:
    image: mariadb:10.7
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=app
    ports:
      - "3306:3306"
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
    deploy:
      restart_policy:
        condition: unless-stopped

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    deploy:
      restart_policy:
        condition: unless-stopped

  kafka:
    image: bitnami/kafka:3.3
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    deploy:
      restart_policy:
        condition: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - "8082:8080"
    deploy:
      restart_policy:
        condition: unless-stopped
